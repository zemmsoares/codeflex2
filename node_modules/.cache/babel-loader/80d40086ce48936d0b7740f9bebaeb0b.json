{"ast":null,"code":"var _jsxFileName = \"/home/zm/my-codeflex/src/components/ListCategories/ListCategories.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getAuthorization, parseLocalJwt, textToLowerCaseNoSpaces } from '../commons/Utils';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListCategories() {\n  _s();\n\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    fetch(URL + '/api/database/PractiseCategory/listwithstats/' + parseLocalJwt().username, {\n      headers: { ...getAuthorization()\n      }\n    }).then(res => res.json()).then(data => {\n      setCategories({\n        categories: data\n      });\n      console.log(categories);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: categories.length > 0 && categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            style: {\n              width: category.finishedProblems / category.totalProblems * 100 + '%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"\",\n            children: [\"You have completed \", category.finishedProblems, \" (\", (category.finishedProblems / category.totalProblems * 100).toFixed(2), \"%) out of the \", category.totalProblems, \" available problems.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: \"/practise/\" + textToLowerCaseNoSpaces(category.name),\n              state: {\n                categoryId: category.id\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              className: \"btn btn-codeflex\",\n              value: \"Explore problems\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 144\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)]\n      }, category.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ListCategories, \"+ijgB8ROEl0Dkz53OTIi8GynN6s=\");\n\n_c = ListCategories;\nexport default ListCategories;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListCategories\");","map":{"version":3,"names":["React","useEffect","useState","getAuthorization","parseLocalJwt","textToLowerCaseNoSpaces","Link","ListCategories","categories","setCategories","fetch","URL","username","headers","then","res","json","data","console","log","length","map","category","index","name","width","finishedProblems","totalProblems","toFixed","pathname","state","categoryId","id"],"sources":["/home/zm/my-codeflex/src/components/ListCategories/ListCategories.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { getAuthorization, parseLocalJwt, textToLowerCaseNoSpaces } from '../commons/Utils';\nimport { Link } from 'react-router-dom';\n\nfunction ListCategories() {\n    const [categories, setCategories] = useState([]);\n\n    useEffect(() => {\n        fetch(URL + '/api/database/PractiseCategory/listwithstats/' + parseLocalJwt().username, {\n            headers: {\n                ...getAuthorization()\n            }\n        }).then(res => res.json()).then(data => {\n            setCategories({ categories: data })\n            console.log(categories);\n        })\n    })\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n\n                {categories.length > 0 && categories.map((category, index) => (\n                    <div key={category.id} className=\"\">\n                        <h2>{category.name}</h2>\n                        <div className=\"progress-bar\">\n                            <div className=\"\" style={{ width: (category.finishedProblems / category.totalProblems * 100) + '%' }}></div>\n                            <p className=\"\">You have completed {category.finishedProblems} ({(category.finishedProblems / category.totalProblems * 100).toFixed(2)}%) out of the {category.totalProblems} available problems.</p>\n                        </div>\n                        <div className=\"\">\n                            <Link to={{ pathname: \"/practise/\" + textToLowerCaseNoSpaces(category.name), state: { categoryId: category.id } }}><input type=\"submit\" className=\"btn btn-codeflex\" value=\"Explore problems\" /></Link>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default ListCategories"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,gBAAT,EAA2BC,aAA3B,EAA0CC,uBAA1C,QAAyE,kBAAzE;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAEA,SAASC,cAAT,GAA0B;EAAA;;EACtB,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;EAEAD,SAAS,CAAC,MAAM;IACZS,KAAK,CAACC,GAAG,GAAG,+CAAN,GAAwDP,aAAa,GAAGQ,QAAzE,EAAmF;MACpFC,OAAO,EAAE,EACL,GAAGV,gBAAgB;MADd;IAD2E,CAAnF,CAAL,CAIGW,IAJH,CAIQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJf,EAI2BF,IAJ3B,CAIgCG,IAAI,IAAI;MACpCR,aAAa,CAAC;QAAED,UAAU,EAAES;MAAd,CAAD,CAAb;MACAC,OAAO,CAACC,GAAR,CAAYX,UAAZ;IACH,CAPD;EAQH,CATQ,CAAT;EAYA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,uBACI;MAAK,SAAS,EAAC,KAAf;MAAA,UAEKA,UAAU,CAACY,MAAX,GAAoB,CAApB,IAAyBZ,UAAU,CAACa,GAAX,CAAe,CAACC,QAAD,EAAWC,KAAX,kBACrC;QAAuB,SAAS,EAAC,EAAjC;QAAA,wBACI;UAAA,UAAKD,QAAQ,CAACE;QAAd;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAK,SAAS,EAAC,cAAf;UAAA,wBACI;YAAK,SAAS,EAAC,EAAf;YAAkB,KAAK,EAAE;cAAEC,KAAK,EAAGH,QAAQ,CAACI,gBAAT,GAA4BJ,QAAQ,CAACK,aAArC,GAAqD,GAAtD,GAA6D;YAAtE;UAAzB;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAG,SAAS,EAAC,EAAb;YAAA,kCAAoCL,QAAQ,CAACI,gBAA7C,QAAiE,CAACJ,QAAQ,CAACI,gBAAT,GAA4BJ,QAAQ,CAACK,aAArC,GAAqD,GAAtD,EAA2DC,OAA3D,CAAmE,CAAnE,CAAjE,oBAAsJN,QAAQ,CAACK,aAA/J;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ,eAMI;UAAK,SAAS,EAAC,EAAf;UAAA,uBACI,QAAC,IAAD;YAAM,EAAE,EAAE;cAAEE,QAAQ,EAAE,eAAexB,uBAAuB,CAACiB,QAAQ,CAACE,IAAV,CAAlD;cAAmEM,KAAK,EAAE;gBAAEC,UAAU,EAAET,QAAQ,CAACU;cAAvB;YAA1E,CAAV;YAAA,uBAAmH;cAAO,IAAI,EAAC,QAAZ;cAAqB,SAAS,EAAC,kBAA/B;cAAkD,KAAK,EAAC;YAAxD;cAAA;cAAA;cAAA;YAAA;UAAnH;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QANJ;MAAA,GAAUV,QAAQ,CAACU,EAAnB;QAAA;QAAA;QAAA;MAAA,QADsB;IAF9B;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBH;;GAlCQzB,c;;KAAAA,c;AAoCT,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}