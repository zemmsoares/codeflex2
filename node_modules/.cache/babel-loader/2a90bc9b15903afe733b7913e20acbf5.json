{"ast":null,"code":"export const validateLength = (string, min, max) => {\n  if (string) {\n    let length = string.trim().length;\n    console.log(\"LENGTH\" + length);\n\n    if (length >= min && length <= max) {\n      return true;\n    }\n  }\n\n  return false;\n};\nexport const validateNumberRange = (number, min, max) => {\n  if (number >= min && number <= max) {\n    return true;\n  }\n\n  return false;\n};\nexport const validateRegex = (string, regexp) => {\n  if (string) {\n    string = string.match(regexp);\n\n    if (string) {\n      return string[0];\n    }\n  }\n\n  return false;\n};\nexport const validateStringChars = string => {\n  return validateRegex(string, \"^[A-Za-z0-9 _:]*[A-Za-z0-9][A-Za-z0-9 _]*$\");\n};\nexport const validateStringCharsNoSpaces = string => {\n  return validateRegex(string, \"^[A-Za-z0-9_]*[A-Za-z0-9][A-Za-z0-9_]*$\");\n};\nexport const validateEmail = email => {\n  var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\nexport const areStringEqual = (string1, string2) => {\n  if (string1 && string2) {\n    if (string1.trim().localeCompare(string2.trim()) == 0) {\n      console.log('equal');\n      return true;\n    }\n  }\n\n  return false;\n};\nexport const isStringEmpty = string => {\n  if (string == \"\") {\n    return true;\n  }\n\n  return false;\n};\nexport const isEditorStateEmpty = string => {\n  if (string && string.trim().localeCompare(\"<p></p>\") === 0) {\n    return true;\n  }\n\n  return false;\n};","map":{"version":3,"names":["validateLength","string","min","max","length","trim","console","log","validateNumberRange","number","validateRegex","regexp","match","validateStringChars","validateStringCharsNoSpaces","validateEmail","email","re","test","String","toLowerCase","areStringEqual","string1","string2","localeCompare","isStringEmpty","isEditorStateEmpty"],"sources":["/home/zm/my-codeflex/src/components/commons/Validation.js"],"sourcesContent":["export const validateLength = (string, min, max) => {\n    if (string) {\n        let length = string.trim().length;\n        console.log(\"LENGTH\" + length);\n        if (length >= min && length <= max) {\n            return true;\n        }\n    }\n    return false;\n}\n\nexport const validateNumberRange = (number, min, max) => {\n\n    if (number >= min && number <= max) {\n        return true;\n    }\n    return false;\n}\n\nexport const validateRegex = (string, regexp) => {\n    if (string) {\n        string = string.match(regexp);\n        if (string) {\n            return string[0];\n        }\n    }\n    return false;\n}\n\nexport const validateStringChars = (string) => {\n    return validateRegex(string, \"^[A-Za-z0-9 _:]*[A-Za-z0-9][A-Za-z0-9 _]*$\")\n}\n\nexport const validateStringCharsNoSpaces = (string) => {\n    return validateRegex(string, \"^[A-Za-z0-9_]*[A-Za-z0-9][A-Za-z0-9_]*$\");\n}\n\nexport const validateEmail = (email) => {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nexport const areStringEqual = (string1, string2) => {\n    if (string1 && string2) {\n        if (string1.trim().localeCompare(string2.trim()) == 0) {\n            console.log('equal')\n            return true;\n        }\n    }\n    return false;\n}\n\nexport const isStringEmpty = (string) => {\n    if (string == \"\") {\n        return true;\n    }\n    return false;\n}\n\nexport const isEditorStateEmpty = (string) => {\n    if (string && string.trim().localeCompare(\"<p></p>\") === 0) {\n        return true;\n    }\n    return false;\n}"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,CAACC,MAAD,EAASC,GAAT,EAAcC,GAAd,KAAsB;EAChD,IAAIF,MAAJ,EAAY;IACR,IAAIG,MAAM,GAAGH,MAAM,CAACI,IAAP,GAAcD,MAA3B;IACAE,OAAO,CAACC,GAAR,CAAY,WAAWH,MAAvB;;IACA,IAAIA,MAAM,IAAIF,GAAV,IAAiBE,MAAM,IAAID,GAA/B,EAAoC;MAChC,OAAO,IAAP;IACH;EACJ;;EACD,OAAO,KAAP;AACH,CATM;AAWP,OAAO,MAAMK,mBAAmB,GAAG,CAACC,MAAD,EAASP,GAAT,EAAcC,GAAd,KAAsB;EAErD,IAAIM,MAAM,IAAIP,GAAV,IAAiBO,MAAM,IAAIN,GAA/B,EAAoC;IAChC,OAAO,IAAP;EACH;;EACD,OAAO,KAAP;AACH,CANM;AAQP,OAAO,MAAMO,aAAa,GAAG,CAACT,MAAD,EAASU,MAAT,KAAoB;EAC7C,IAAIV,MAAJ,EAAY;IACRA,MAAM,GAAGA,MAAM,CAACW,KAAP,CAAaD,MAAb,CAAT;;IACA,IAAIV,MAAJ,EAAY;MACR,OAAOA,MAAM,CAAC,CAAD,CAAb;IACH;EACJ;;EACD,OAAO,KAAP;AACH,CARM;AAUP,OAAO,MAAMY,mBAAmB,GAAIZ,MAAD,IAAY;EAC3C,OAAOS,aAAa,CAACT,MAAD,EAAS,4CAAT,CAApB;AACH,CAFM;AAIP,OAAO,MAAMa,2BAA2B,GAAIb,MAAD,IAAY;EACnD,OAAOS,aAAa,CAACT,MAAD,EAAS,yCAAT,CAApB;AACH,CAFM;AAIP,OAAO,MAAMc,aAAa,GAAIC,KAAD,IAAW;EACpC,IAAIC,EAAE,GAAG,yJAAT;EACA,OAAOA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACH,KAAD,CAAN,CAAcI,WAAd,EAAR,CAAP;AACH,CAHM;AAKP,OAAO,MAAMC,cAAc,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB;EAChD,IAAID,OAAO,IAAIC,OAAf,EAAwB;IACpB,IAAID,OAAO,CAACjB,IAAR,GAAemB,aAAf,CAA6BD,OAAO,CAAClB,IAAR,EAA7B,KAAgD,CAApD,EAAuD;MACnDC,OAAO,CAACC,GAAR,CAAY,OAAZ;MACA,OAAO,IAAP;IACH;EACJ;;EACD,OAAO,KAAP;AACH,CARM;AAUP,OAAO,MAAMkB,aAAa,GAAIxB,MAAD,IAAY;EACrC,IAAIA,MAAM,IAAI,EAAd,EAAkB;IACd,OAAO,IAAP;EACH;;EACD,OAAO,KAAP;AACH,CALM;AAOP,OAAO,MAAMyB,kBAAkB,GAAIzB,MAAD,IAAY;EAC1C,IAAIA,MAAM,IAAIA,MAAM,CAACI,IAAP,GAAcmB,aAAd,CAA4B,SAA5B,MAA2C,CAAzD,EAA4D;IACxD,OAAO,IAAP;EACH;;EACD,OAAO,KAAP;AACH,CALM"},"metadata":{},"sourceType":"module"}