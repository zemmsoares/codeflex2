{"ast":null,"code":"var _jsxFileName = \"/home/zm/my-codeflex/src/components/PathLink/PathLink.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { splitUrl } from '../commons/Utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PathLink extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  createPath(path, index) {\n    return path.map((p, i) => {\n      if (i <= index) {\n        p + \"/\";\n      }\n    });\n  }\n\n  buildPath(pathname, index) {\n    let finalPath = '/';\n\n    for (let i = 0; i <= index; i++) {\n      finalPath += pathname[i];\n\n      if (this.props.removePath.includes[i]) {\n        return \"\";\n      }\n\n      if (i < index) {\n        finalPath += '/';\n      }\n    }\n\n    return finalPath;\n  }\n\n  render() {\n    let pathname = splitUrl(this.props.path);\n    let title = this.props.title;\n\n    if (typeof title !== 'undefined') {\n      title.replace('-', ' ');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-link-container\",\n        children: [pathname.map((p, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: {\n              pathname: this.buildPath(pathname, index)\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                display: 'inline-block',\n                fontFamily: \"'Roboto Condensed', sans-serif\"\n              },\n              children: p\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), index < pathname.length - 1 ? /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons\",\n            children: \"keyboard_arrow_right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 60\n          }, this) : '']\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-title-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"page-title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          id: \"pathlink-hr\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nPathLink.defaultProps = {\n  removeHyphen: true,\n  removePath: []\n};\nexport default PathLink;","map":{"version":3,"names":["React","Link","splitUrl","PathLink","Component","constructor","props","createPath","path","index","map","p","i","buildPath","pathname","finalPath","removePath","includes","render","title","replace","display","fontFamily","length","defaultProps","removeHyphen"],"sources":["/home/zm/my-codeflex/src/components/PathLink/PathLink.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\nimport { splitUrl } from '../commons/Utils';\n\nclass PathLink extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    createPath(path, index) {\n        return path.map((p, i) => {\n            if (i <= index) {\n                p + \"/\"\n            }\n        });\n    }\n\n    buildPath(pathname, index) {\n        let finalPath = '/';\n        for (let i = 0; i <= index; i++) {\n            finalPath += pathname[i];\n\n            if (this.props.removePath.includes[i]) {\n                return \"\";\n            }\n\n            if (i < index) {\n                finalPath += '/';\n            }\n        }\n        return finalPath;\n    }\n\n\n    render() {\n        let pathname = splitUrl(this.props.path);\n\n        let title = this.props.title;\n        if (typeof title !== 'undefined') {\n            title.replace('-', ' ');\n        }\n\n        return (\n            <div>\n                <div className=\"header-link-container\">\n                    {pathname.map((p, index) => (\n                        <div key={index}>\n                            <Link key={index} to={{ pathname: this.buildPath(pathname, index) }}>\n                                <p style={{ display: 'inline-block', fontFamily: \"'Roboto Condensed', sans-serif\" }}>\n                                    {p}\n                                </p>\n                            </Link>\n                            {index < pathname.length - 1 ? <i className=\"material-icons\">keyboard_arrow_right</i> : ''}\n                        </div>\n                    ))}\n                    <div>\n                    </div>\n                </div>\n                <div className=\"page-title-container\">\n                    <h2 className=\"page-title\">{title}</h2>\n                    <hr id=\"pathlink-hr\" />\n                </div>\n            </div>\n        )\n\n    }\n}\n\nPathLink.defaultProps = {\n    removeHyphen: true,\n    removePath: []\n}\n\nexport default PathLink;\n\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;EACnCC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;EACH;;EAEDC,UAAU,CAACC,IAAD,EAAOC,KAAP,EAAc;IACpB,OAAOD,IAAI,CAACE,GAAL,CAAS,CAACC,CAAD,EAAIC,CAAJ,KAAU;MACtB,IAAIA,CAAC,IAAIH,KAAT,EAAgB;QACZE,CAAC,GAAG,GAAJ;MACH;IACJ,CAJM,CAAP;EAKH;;EAEDE,SAAS,CAACC,QAAD,EAAWL,KAAX,EAAkB;IACvB,IAAIM,SAAS,GAAG,GAAhB;;IACA,KAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIH,KAArB,EAA4BG,CAAC,EAA7B,EAAiC;MAC7BG,SAAS,IAAID,QAAQ,CAACF,CAAD,CAArB;;MAEA,IAAI,KAAKN,KAAL,CAAWU,UAAX,CAAsBC,QAAtB,CAA+BL,CAA/B,CAAJ,EAAuC;QACnC,OAAO,EAAP;MACH;;MAED,IAAIA,CAAC,GAAGH,KAAR,EAAe;QACXM,SAAS,IAAI,GAAb;MACH;IACJ;;IACD,OAAOA,SAAP;EACH;;EAGDG,MAAM,GAAG;IACL,IAAIJ,QAAQ,GAAGZ,QAAQ,CAAC,KAAKI,KAAL,CAAWE,IAAZ,CAAvB;IAEA,IAAIW,KAAK,GAAG,KAAKb,KAAL,CAAWa,KAAvB;;IACA,IAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;MAC9BA,KAAK,CAACC,OAAN,CAAc,GAAd,EAAmB,GAAnB;IACH;;IAED,oBACI;MAAA,wBACI;QAAK,SAAS,EAAC,uBAAf;QAAA,WACKN,QAAQ,CAACJ,GAAT,CAAa,CAACC,CAAD,EAAIF,KAAJ,kBACV;UAAA,wBACI,QAAC,IAAD;YAAkB,EAAE,EAAE;cAAEK,QAAQ,EAAE,KAAKD,SAAL,CAAeC,QAAf,EAAyBL,KAAzB;YAAZ,CAAtB;YAAA,uBACI;cAAG,KAAK,EAAE;gBAAEY,OAAO,EAAE,cAAX;gBAA2BC,UAAU,EAAE;cAAvC,CAAV;cAAA,UACKX;YADL;cAAA;cAAA;cAAA;YAAA;UADJ,GAAWF,KAAX;YAAA;YAAA;YAAA;UAAA,QADJ,EAMKA,KAAK,GAAGK,QAAQ,CAACS,MAAT,GAAkB,CAA1B,gBAA8B;YAAG,SAAS,EAAC,gBAAb;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAA9B,GAAuF,EAN5F;QAAA,GAAUd,KAAV;UAAA;UAAA;UAAA;QAAA,QADH,CADL,eAWI;UAAA;UAAA;UAAA;QAAA,QAXJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAeI;QAAK,SAAS,EAAC,sBAAf;QAAA,wBACI;UAAI,SAAS,EAAC,YAAd;UAAA,UAA4BU;QAA5B;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAI,EAAE,EAAC;QAAP;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAfJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAuBH;;AA7DkC;;AAgEvChB,QAAQ,CAACqB,YAAT,GAAwB;EACpBC,YAAY,EAAE,IADM;EAEpBT,UAAU,EAAE;AAFQ,CAAxB;AAKA,eAAeb,QAAf"},"metadata":{},"sourceType":"module"}