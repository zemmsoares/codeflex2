{"ast":null,"code":"var _jsxFileName = \"/home/zm/my-codeflex/src/components/NavBar/NavBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { splitUrl } from '../commons/Utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NavBar() {\n  _s();\n\n  const [page, setPage] = useState(\"\");\n  const [count, setCount] = useState(0);\n  const [url, setUrl] = useState(splitUrl(window.location.pathname)[0]);\n  const [logged, setLogged] = useState(false);\n  useEffect(() => {\n    console.log('componentWillUpdate- runs on every update');\n    setUrl(splitUrl(window.location.pathname)[0]);\n\n    if (localStorage.getItem('token') != null) {\n      setLogged(false);\n    } else {\n      setLogged(true);\n    }\n  }, [url]);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar navbar-inverse\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"navbar-toggle\",\n          \"data-toggle\": \"collapse\",\n          \"data-target\": \"#myNavbar\",\n          style: {\n            border: '2px solid white'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon-bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon-bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon-bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"navbar-brand\",\n          href: \"/\",\n          style: {\n            fontFamily: 'Roboto Condensed, sans-serif'\n          },\n          children: \"codeflex\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NavBar, \"37+SBCgk/zzLmVXuoVPxQm6Mqfg=\");\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","useState","useEffect","splitUrl","NavBar","page","setPage","count","setCount","url","setUrl","window","location","pathname","logged","setLogged","console","log","localStorage","getItem","border","fontFamily"],"sources":["/home/zm/my-codeflex/src/components/NavBar/NavBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { splitUrl } from '../commons/Utils'\n\nfunction NavBar() {\n    const [page, setPage] = useState(\"\");\n    const [count, setCount] = useState(0);\n    const [url, setUrl] = useState(splitUrl(window.location.pathname)[0]);\n    const [logged, setLogged] = useState(false);\n\n    useEffect(() => {\n        console.log('componentWillUpdate- runs on every update');\n        setUrl(splitUrl(window.location.pathname)[0]);\n\n\n        if (localStorage.getItem('token') != null) {\n            setLogged(false);\n        } else {\n            setLogged(true);\n        }\n\n\n\n    }, [url])\n\n\n\n\n    return (\n        <nav className=\"navbar navbar-inverse\">\n            <div className=\"container\">\n                <div className=\"navbar-header\">\n                    <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\" style={{ border: '2px solid white' }}>\n                        <span className=\"icon-bar\"></span>\n                        <span className=\"icon-bar\"></span>\n                        <span className=\"icon-bar\"></span>\n                    </button>\n                    <a className=\"navbar-brand\" href=\"/\" style={{ fontFamily: 'Roboto Condensed, sans-serif' }}>codeflex</a>\n                </div>\n\n            </div>\n        </nav>\n    );\n\n\n}\n\nexport default NavBar"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;AAEA,SAASC,MAAT,GAAkB;EAAA;;EACd,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAACE,QAAQ,CAACQ,MAAM,CAACC,QAAP,CAAgBC,QAAjB,CAAR,CAAmC,CAAnC,CAAD,CAA9B;EACA,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,KAAD,CAApC;EAEAC,SAAS,CAAC,MAAM;IACZc,OAAO,CAACC,GAAR,CAAY,2CAAZ;IACAP,MAAM,CAACP,QAAQ,CAACQ,MAAM,CAACC,QAAP,CAAgBC,QAAjB,CAAR,CAAmC,CAAnC,CAAD,CAAN;;IAGA,IAAIK,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,IAArC,EAA2C;MACvCJ,SAAS,CAAC,KAAD,CAAT;IACH,CAFD,MAEO;MACHA,SAAS,CAAC,IAAD,CAAT;IACH;EAIJ,CAbQ,EAaN,CAACN,GAAD,CAbM,CAAT;EAkBA,oBACI;IAAK,SAAS,EAAC,uBAAf;IAAA,uBACI;MAAK,SAAS,EAAC,WAAf;MAAA,uBACI;QAAK,SAAS,EAAC,eAAf;QAAA,wBACI;UAAQ,IAAI,EAAC,QAAb;UAAsB,SAAS,EAAC,eAAhC;UAAgD,eAAY,UAA5D;UAAuE,eAAY,WAAnF;UAA+F,KAAK,EAAE;YAAEW,MAAM,EAAE;UAAV,CAAtG;UAAA,wBACI;YAAM,SAAS,EAAC;UAAhB;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAM,SAAS,EAAC;UAAhB;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI;YAAM,SAAS,EAAC;UAAhB;YAAA;YAAA;YAAA;UAAA,QAHJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAMI;UAAG,SAAS,EAAC,cAAb;UAA4B,IAAI,EAAC,GAAjC;UAAqC,KAAK,EAAE;YAAEC,UAAU,EAAE;UAAd,CAA5C;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QANJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH;;GAzCQjB,M;;KAAAA,M;AA2CT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}